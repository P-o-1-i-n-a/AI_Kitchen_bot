from bot.states import DIET_RULES


def check_diet_conflicts(ingredients: str, diet_type: str, allergies: str = "") -> tuple[list, str]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–∏–µ—Ç–µ
    :param ingredients: –°—Ç—Ä–æ–∫–∞ —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏
    :param diet_type: –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –¥–∏–µ—Ç—ã
    :param allergies: –°—Ç—Ä–æ–∫–∞ —Å –∞–ª–ª–µ—Ä–≥–µ–Ω–∞–º–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    :return: (—Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤, —Å—Ç—Ä–æ–∫–∞ —Å –∑–∞–º–µ–Ω–∞–º–∏)
    """
    if diet_type not in DIET_RULES:
        return [], ""

    ingredients_list = [i.strip().lower() for i in ingredients.split(',')]
    forbidden = DIET_RULES[diet_type].get("forbidden", [])

    if diet_type == "‚ö†Ô∏è –ê–ª–ª–µ—Ä–≥–∏–∏":
        forbidden.extend(a.strip().lower() for a in allergies.split(',') if a.strip())

    conflicts = []
    for ingredient in ingredients_list:
        for forbidden_item in forbidden:
            if forbidden_item and forbidden_item in ingredient:
                conflicts.append(ingredient)
                break

    replacement_note = ""
    if conflicts and DIET_RULES[diet_type].get("replacements"):
        replacement_note = "\n\nüîÅ –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–∞–º–µ–Ω—ã:\n"
        for original, replacement in DIET_RULES[diet_type]["replacements"].items():
            if any(original in conflict for conflict in conflicts):
                replacement_note += f"- {original} ‚Üí {replacement}\n"

    return conflicts, replacement_note