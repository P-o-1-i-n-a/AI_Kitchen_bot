from aiogram import types, F
from aiogram.filters import Command
from bot.keyboards.main import main_keyboard, search_method_keyboard
from bot.keyboards.inline import channel_markup, recipe_actions_markup
from bot.states import user_states, reset_user_state
from bot.services.diet_checker import check_diet_conflicts

async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /help"""
    reset_user_state(message.chat.id)
    await message.answer(
        "üë®‚Äçüç≥ –ü—Ä–∏–≤–µ—Ç! –Ø - —É–º–Ω—ã–π –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π –±–æ—Ç.\n"
        "–Ø –º–æ–≥—É:\n"
        "‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –±–ª—é–¥–∞\n"
        "‚Ä¢ –ü—Ä–∏–¥—É–º–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç –∏–∑ –≤–∞—à–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤\n"
        "‚Ä¢ –£—á–∏—Ç—ã–≤–∞—Ç—å –¥–∏–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_keyboard(),
        parse_mode="HTML"
    )

async def show_offer(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—É–±–ª–∏—á–Ω—É—é –æ—Ñ–µ—Ä—Ç—É —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    offer_text = (
        "<b>üìÑ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞</b>\n\n"
        "1. –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é\n"
        "2. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ:\n"
        "   ‚Ä¢ –ê–ª–ª–µ—Ä–≥–µ–Ω—ã\n"
        "   ‚Ä¢ –°—Ä–æ–∫–∏ –≥–æ–¥–Ω–æ—Å—Ç–∏\n"
        "   ‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å\n\n"
        "3. –ë–æ—Ç –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –¥–∏–µ—Ç–æ–ª–æ–≥–∞"
    )
    await message.answer(offer_text, parse_mode="HTML")

async def show_channel(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–Ω–∞–ª —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π"""
    await message.answer(
        "üéÅ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø–æ–ª—É—á–∏—Ç–µ:\n"
        "‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã\n"
        "‚Ä¢ –ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ –ª–∞–π—Ñ—Ö–∞–∫–∏\n"
        "‚Ä¢ –°–µ–∑–æ–Ω–Ω—ã–µ –ø–æ–¥–±–æ—Ä–∫–∏",
        reply_markup=channel_markup()
    )

async def handle_back_to_menu(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await cmd_start(message)

async def show_recipe_help(message: types.Message):
    """–ü–æ–º–æ—â—å –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏"""
    help_text = (
        "<b>üß≠ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º:</b>\n\n"
        "<u>–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é –±–ª—é–¥–∞:</u>\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ö–Ω—é\n"
        "2. –£–∫–∞–∂–∏—Ç–µ –¥–∏–µ—Ç—É\n"
        "3. –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç —Å –ö–ë–ñ–£\n\n"
        "<u>–ü–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º:</u>\n"
        "1. –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ö–Ω—é\n"
        "3. –£–∫–∞–∂–∏—Ç–µ –¥–∏–µ—Ç—É"
    )
    await message.answer(help_text, parse_mode="HTML")

def register_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    dp.message.register(cmd_start, Command("start", "help"))
    dp.message.register(show_recipe_help, Command("help"))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    dp.message.register(show_offer, F.text == "üìú –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞")
    dp.message.register(show_channel, F.text == "üì¢ –ù–∞—à –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π –∫–∞–Ω–∞–ª")
    dp.message.register(handle_back_to_menu, F.text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
    
    # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
    from bot.handlers import recipe_flow, buttons
    recipe_flow.register_handlers(dp)
    buttons.register_handlers(dp)
